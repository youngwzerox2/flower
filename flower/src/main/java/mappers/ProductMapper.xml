<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="productDAO">
	 
	<!-- 상품 목록 조회(출력) -->
	<select id="getCateProdList" parameterType="com.flower.vo.ProductVO" resultType="com.flower.vo.ProductVO">
		SELECT p.PRODUCT_ID, p.PRODUCT_NAME, p.PRODUCT_PRICE, group_concat(img.PRODUCT_IMAGE_FILE_NAME ORDER BY img.PRODUCT_IMAGE_FILE_NAME) product_image_file_name
		FROM product p INNER JOIN product_image img
		ON p.product_id = img.product_id
		WHERE img.PRODUCT_IMAGE_FROUTE = 'list'
		<if test="blooming_season != null">
			AND p.BLOOMING_SEASON = #{blooming_season}
		</if>
		<if test="pet_friendly == true">
			AND p.PET_FRIENDLY = #{pet_friendly}
		</if>
		<if test="easy_care == true">
			AND p.EASY_CARE = #{easy_care}
		</if>
		<if test="blooming_time != null">
			AND p.BLOOMING_TIME = #{blooming_time}
		</if>
		GROUP BY p.PRODUCT_ID;
	</select>
	
	<!-- 선택한 카테고리에 해당하는 상품의 개수 조회(출력) -->
	<select id="getProdCateQuan" parameterType="com.flower.vo.ProductVO" resultType="Integer">
		SELECT count(PRODUCT_ID) prod_cate_quan
		FROM product
		<choose>
			<when test="blooming_season != null">
				WHERE BLOOMING_SEASON = #{blooming_season}
				GROUP BY BLOOMING_SEASON
			</when>
			<when test="pet_friendly == true">
				WHERE PET_FRIENDLY = #{pet_friendly}
				GROUP BY PET_FRIENDLY
			</when>
			<when test="easy_care == true">
				WHERE EASY_CARE = #{easy_care}
				GROUP BY EASY_CARE
			</when>
			<when test="blooming_time != null">
				WHERE BLOOMING_TIME = #{blooming_time}
				GROUP BY BLOOMING_TIME
			</when>
			<otherwise>
				GROUP BY PRODUCT_state
				HAVING PRODUCT_STATE = 'Y'
			</otherwise>
		</choose>
		
	</select>
	
	<!-- 페이징: 클릭한 버튼에 해당하는 상품 목록 출력 -->
	
	
	<!-- 상품 상세 조회(출력) -->
	<select id="getProd" parameterType="com.flower.vo.ProductVO" resultType="com.flower.vo.ProductVO">
		SELECT p.PRODUCT_ID, p.PRODUCT_NAME, p.PRODUCT_PRICE, p.BLOOMING_SEASON, p.PET_FRIENDLY, p.EASY_CARE, p.PRODUCT_LIGHT, p.BLOOMING_TIME, group_concat(img.PRODUCT_IMAGE_FILE_NAME ORDER BY img.PRODUCT_IMAGE_FILE_NAME) product_image_file_name, group_concat(img.PRODUCT_IMAGE_TYPE ORDER BY img.PRODUCT_IMAGE_TYPE) product_image_type, group_concat(img.PRODUCT_IMAGE_FROUTE ORDER BY img.PRODUCT_IMAGE_FILE_NAME) product_image_froute
		FROM flower.product p INNER JOIN flower.product_image img
		on p.product_id = img.product_id
		WHERE p.PRODUCT_ID = #{product_id}
		AND img.PRODUCT_IMAGE_FROUTE != 'list'
		GROUP BY p.PRODUCT_ID
	</select>
	
	<!-- 상품 상세의 main 사진 조회(출력) -->
	<select id="getImgMain" parameterType="com.flower.vo.ProductVO" resultType="com.flower.vo.ProductVO">
		SELECT img.PRODUCT_IMAGE_FILE_NAME
		FROM product_image img
		WHERE product_id = #{product_id}
		AND PRODUCT_IMAGE_FROUTE = 'main'
	</select>
	
	<!-- 상품 상세의 sub 사진 조회(출력) -->
	<select id="getImgSub" parameterType="com.flower.vo.ProductVO" resultType="com.flower.vo.ProductVO">
		SELECT group_concat(img.PRODUCT_IMAGE_FILE_NAME ORDER BY img.PRODUCT_IMAGE_FILE_NAME) PRODUCT_IMAGE_FILE_NAME
		FROM product_image img
		WHERE product_id = #{product_id}
		AND PRODUCT_IMAGE_FROUTE = 'sub'
		GROUP BY img.product_id
	</select>
	
	<!-- 상품 상세의 설명(guide) 사진 조회(출력) -->
	<select id="getImgGuide" parameterType="com.flower.vo.ProductVO" resultType="com.flower.vo.ProductVO">
		SELECT group_concat(img.PRODUCT_IMAGE_FILE_NAME ORDER BY img.PRODUCT_IMAGE_FILE_NAME) PRODUCT_IMAGE_FILE_NAME
		FROM product_image img
		WHERE product_id = #{product_id}
		AND PRODUCT_IMAGE_FROUTE = 'guide'
		GROUP BY img.product_id
	</select>
	
	<!-- 상품필터링 -->
	<select id="filterProducts" resultType="com.flower.vo.ProductVO" parameterType="java.util.Map">
        SELECT * FROM product
        <where>
            <if test="pet_friendly != null">
                AND pet_friendly = #{pet_friendly}
            </if>
            <if test="easy_care != null">
                AND easy_care = #{easy_care}
            </if>
            <!-- 라디오 버튼의 경우도 추가 가능 -->
           
        
        </where>
    </select>
	
	
	
	<!-- 바로주문하기 눌렀을때 가져갈 이미지 -->
	<select id="getList" parameterType="com.flower.vo.ProductVO" resultType="com.flower.vo.ProductVO" >
	SELECT min(PRODUCT_IMAGE_FILE_NAME) PRODUCT_IMAGE_FILE_NAME
		FROM product_image img
		WHERE product_id = #{product_id}
		AND PRODUCT_IMAGE_FROUTE = 'list'
		group by PRODUCT_ID
	</select>
	
	
	<!-- 상품 찜 상태 조회: 해당 회원이 좋아한 상품이 있는지 가져온다. -->
	<select id="chkLoveList" parameterType="com.flower.vo.LoveVO" resultType="Integer">
		SELECT PRODUCT_ID
		FROM love
		WHERE MEMBER_ID = #{member_id}
		AND PRODUCT_ID = #{product_id}		
	</select>
	
	<!-- 로그인한 회원이 클릭한 상품 찜상태로 변경 -->
	<insert id="prodLove" parameterType="com.flower.vo.LoveVO">
		INSERT INTO love (product_id, member_id)
		VALUES (#{product_id}, #{member_id})
	</insert>
	
	<!-- 로그인한 회원이 찜했던 상품을 다시 클릭했을 경우, 찜 해제 -->
	<delete id="prodUnLove" parameterType="com.flower.vo.LoveVO">
		DELETE FROM love
		WHERE MEMBER_ID = #{member_id}
		AND PRODUCT_ID = #{product_id}
	</delete>
</mapper>
