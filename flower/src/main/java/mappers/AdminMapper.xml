<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminDAO">
	<!-- ************************************************************* -->
    <!-- ***************** 공통 SQL 코드 정의 *************************** -->
    <!-- ************************************************************* -->
    <sql id="memberSQL">
    	<![CDATA[
	        WITH ADMIN_MEMBERS AS (
	            SELECT
	                  M.MEMBER_ID 	AS MEMBER_ID
	                , M.ADMIN_STATUS AS ADMIN_STATUS
	                , M.MEMBER_NAME AS MEMBER_NAME
	                , M.MEMBER_EMAIL 			AS MEMBER_EMAIL
	                , M.MEMBER_REGISTER_DATE 	AS MEMBER_REGISTER_DATE
	                , M.MEMBER_LEAVE_DATE 		AS MEMBER_LEAVE_DATE
	                , CASE
	                	WHEN M.MEMBER_STATUS = 'N' THEN '일반'
	                    WHEN M.MEMBER_STATUS = 'O' THEN '영구제한'
	                    WHEN M.MEMBER_STATUS = 'L' THEN '탈퇴'
	                    ELSE ''
	                END 						AS MEMBER_STATUS
	                , CASE
	                    WHEN R.ADMIN_ACTION_YN = 'N' AND R.REPORTS_CNT > 0 THEN 'Y'
	                    ELSE 'N'
	                END 						AS REPORT_YN
	                , CASE 
	                	WHEN R.REPORTS_DATE IS NOT NULL THEN R.REPORTS_DATE
						ELSE "없음"
					END 						AS REPORTS_DATE
					, CASE 
						WHEN R.REPORT_CONTENTS IS NOT NULL THEN R.REPORT_CONTENTS
						ELSE "없음"
					END 						AS REPORT_CONTENTS 
					, R.ADMIN_ACTION_YN			AS ADMIN_ACTION_YN 
					, R.REPORTS_CNT				AS REPORTS_CNT
	            FROM MEMBER  M
	      LEFT OUTER JOIN REVIEWS R 
	              ON M.MEMBER_ID = R.MEMBER_ID
	        )
    	]]>
    </sql>

	<sql id="productSQL">
    	<![CDATA[
	        WITH ADMIN_PRODUCTS AS (
	            SELECT 
					  P.PRODUCT_ID				AS PRODUCT_ID
					, P.CATE_ID					AS CATE_ID
					, P.PRODUCT_NAME			AS PRODUCT_NAME
					, P.PRODUCT_CONTENT			AS PRODUCT_CONTENT
					, P.PRODUCT_KEYWORD			AS PRODUCT_KEYWORD
					, P.BLOOMING_SEASON			AS BLOOMING_SEASON
					, P.BLOOMING_TIME			AS BLOOMING_TIME
					, CASE
						WHEN P.PET_FRIENDLY = 1 THEN "O"
				    	ELSE "X"
				  	END 						AS PET_FRIENDLY
					, CASE
						WHEN P.EASY_CARE = 1 THEN "O"
				    	ELSE "X"
				  	END 						AS EASY_CARE
					, P.INVENTORY_QUANTITY		AS INVENTORY_QUANTITY
					, P.PRODUCT_PRICE			AS PRODUCT_PRICE
					, P.PRODUCT_REGISTER_DATE	AS PRODUCT_REGISTER_DATE
					, P.PRODUCT_STATE			AS PRODUCT_STATE
					, CASE 
    					WHEN P.PRODUCT_LIGHT = "DL" THEN "직광"  
    					WHEN P.PRODUCT_LIGHT = "IDL" THEN "간접광"  
    					WHEN P.PRODUCT_LIGHT = "SH" THEN "그늘"  
    					WHEN P.PRODUCT_LIGHT = "NM" THEN "일조량영향적음"  
    					ELSE "알 수 없음"
  					END AS PRODUCT_LIGHT
					, L.LIKES					AS LIKES
				FROM PRODUCT P
		  LEFT OUTER JOIN (SELECT 
							  PRODUCT_ID AS PRODUCT_ID 
							, COUNT(MEMBER_ID) AS LIKES
						     FROM LOVE
					     GROUP BY PRODUCT_ID 
						  ) L
				  ON P.PRODUCT_ID = L.PRODUCT_ID 
	        )
    	]]>
    </sql>
    
    <!-- ************************************************************* -->
    <!-- ************************** 회원 영역 ************************** -->
    <!-- ************************************************************* -->
    <!-- 검색 조건별 회원 조회 -->
    <select id="searchMembers" parameterType="hashmap" resultType="com.flower.vo.AdminVO">
        <include refid="memberSQL" />
	        SELECT MEMBER_ID
	        	 , ADMIN_STATUS
	        	 , MEMBER_NAME
	        	 , MEMBER_EMAIL
	        	 , MEMBER_REGISTER_DATE
	        	 , MEMBER_LEAVE_DATE
	        	 , MEMBER_STATUS
	        	 , REPORT_YN
	          FROM ADMIN_MEMBERS
	         WHERE 1=1
        <if test="searchKey != null and searchKey != '' and searchValue != null and searchValue != ''">
        	   AND ${searchKey} LIKE '%${searchValue}%'
        </if>
          ORDER BY MEMBER_REGISTER_DATE DESC
    </select>

    <!-- 특정 회원 상세 조회 -->
    <select id="searchMemberDetail" parameterType="String" resultType="com.flower.vo.AdminVO">
        <include refid="memberSQL" />
	        SELECT MEMBER_ID
	        	 , ADMIN_STATUS
	        	 , MEMBER_NAME
	        	 , MEMBER_EMAIL
	        	 , MEMBER_REGISTER_DATE
	        	 , MEMBER_LEAVE_DATE
	        	 , MEMBER_STATUS
	        	 , REPORT_YN
	        	 , REPORT_CONTENTS
	        	 , REPORTS_DATE
	        	 , REPORT_CONTENTS
	        	 , REPORTS_CNT
	        	 , ADMIN_ACTION_YN
	        FROM ADMIN_MEMBERS
	       WHERE MEMBER_EMAIL = #{email}
	       LIMIT 1
    </select>

    <!-- 특정 회원 이용 제한 -->
    <update id="limitMember" parameterType="String">
        UPDATE MEMBER
           SET MEMBER_STATUS = 'O'
         WHERE MEMBER_EMAIL  = #{email}
    </update>
    
    <!-- 특정 회원의 신고 내역 조회 -->
    <select id="searchReportContent" parameterType="String" resultType="com.flower.vo.AdminVO">
    	SELECT REVIEWS_ID
    		 , MEMBER_ID
    		 , PRODUCT_ID
    		 , REVIEWS_TITLE
    		 , REVIEWS_CONTENT
    		 , REVIEWS_REGISTER_DATE
    		 , REPORT_CONTENTS
    		 , REPORTS_CNT
    		 , REPORTS_DATE
    	  FROM REVIEWS
    	 WHERE MEMBER_ID = #{reportId}
      ORDER BY REVIEWS_REGISTER_DATE DESC
    	 LIMIT 1
    </select>
    
    <!-- 신고 취소 -->
    <update id="reportCancel" parameterType="hashmap">
    	UPDATE REVIEWS
    	   SET REPORTS_CNT 		= 0
    	     , REPORT_CONTENTS 	= NULL
    	     , REPORTS_DATE		= NULL
    	 WHERE MEMBER_ID 		= #{memberId}
    	   AND PRODUCT_ID		= #{productId}
    </update>
    
    <!-- 특정 리뷰 삭제 (관리자) -->
    <update id="deleteReportTarget" parameterType="String">
    	UPDATE REVIEWS
    	   SET ADMIN_ACTION_YN = "Y"
    	 WHERE REVIEWS_ID = #{reviewId}
    </update>
    
    <!-- ************************************************************* -->
    <!-- ************************** 상품 영역 ************************** -->
    <!-- ************************************************************* -->
    <!-- 검색 조건별 상품 조회 -->
	<select id="searchProducts" parameterType="hashmap" resultType="com.flower.vo.AdminVO">
		<include refid="productSQL" />
			SELECT PRODUCT_ID
				 , PRODUCT_NAME
				 , PRODUCT_CONTENT
				 , INVENTORY_QUANTITY
				 , PRODUCT_PRICE
				 , PRODUCT_STATE
				 , LIKES
			  FROM ADMIN_PRODUCTS
			 WHERE 1=1
        <if test="searchKey != null and searchKey != '' and searchValue != null and searchValue != ''">
        	   AND ${searchKey} LIKE '%${searchValue}%'
        </if>
          ORDER BY INVENTORY_QUANTITY ASC
	</select>
	
	<select id="searchProductDetail" parameterType="String" resultType="com.flower.vo.AdminVO">
        <include refid="productSQL" />
	        SELECT PRODUCT_ID
	        	 , CATE_ID
				 , PRODUCT_NAME
				 , PRODUCT_CONTENT
				 , PRODUCT_KEYWORD
				 , BLOOMING_SEASON
				 , BLOOMING_TIME
				 , PET_FRIENDLY
				 , EASY_CARE
				 , INVENTORY_QUANTITY
				 , PRODUCT_PRICE
				 , PRODUCT_REGISTER_DATE
				 , PRODUCT_STATE
				 , PRODUCT_LIGHT
				 , LIKES
	        FROM ADMIN_PRODUCTS
	       WHERE PRODUCT_ID = #{productId}
	       LIMIT 1
    </select>
    
    <select id="searchProductImgs" parameterType="String" resultType="com.flower.vo.AdminVO">
    	SELECT PRODUCT_IMAGE_FILE_NAME
    		 , PRODUCT_IMAGE_FLOWER_NAME
    		 , PRODUCT_IMAGE_TYPE
    		 , PRODUCT_IMAGE_FROUTE
    	  FROM PRODUCT_IMAGE
    	 WHERE PRODUCT_ID = #{productId}
  	  ORDER BY PRODUCT_IMAGE_FROUTE ASC
    </select>
    
    <update id="modifyProductVisible" parameterType="hashmap">
		UPDATE PRODUCT
           SET PRODUCT_STATE = #{proStat}
         WHERE PRODUCT_ID 	 = #{proId}
    </update>
    
    <!-- ************************************************************* -->
    <!-- ************************** 설정 영역 ************************** -->
    <!-- ************************************************************* -->
    <!-- policy 개수 조회 -->
    <select id="selectPolicyColumnCnt" resultType="int">
    	SELECT COUNT(*) 	AS COLUMN_COUNT
		  FROM INFORMATION_SCHEMA.COLUMNS
		 WHERE TABLE_SCHEMA = "FLOWER"
		   AND TABLE_NAME 	= "COMPANY_POLICY"
    </select>
    
    <select id="selectPolicyColumn" resultType="com.flower.vo.AdminVO">
    	SELECT COLUMN_NAME
    	  	 , COLUMN_COMMENT
		  FROM INFORMATION_SCHEMA.COLUMNS
		 WHERE TABLE_SCHEMA = "FLOWER"
		   AND TABLE_NAME 	= "COMPANY_POLICY"
    </select>
    
</mapper>
