<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reviews">

	 <select id="orderSelect" parameterType="com.flower.vo.OrderTableVO" resultType="com.flower.vo.ReviewsVO">
	 	SELECT IF(COUNT(*) > 0, 1, 0) as review_permission
			FROM order_table 
		WHERE member_id = #{member_id} 
		  AND product_id = #{product_id}
	 </select>
	 
	  <!-- 조건별 조회 -->
	 <select id="reviewsListCondition" parameterType="Map" resultType="com.flower.vo.ReviewsVO">
	 	SELECT * 
			FROM
				(
					SELECT
						@row_number:=@row_number+1 AS no,
						b.*
					FROM 
						(
							SELECT * FROM reviews
							<trim prefix="where">
								<if test="title!=null">
									reviews_title LIKE CONCAT('%', #{title}, '%')
								</if>
							</trim>
						) b,
						(SELECT @row_number:=0) as r
				) ranked
			WHERE no BETWEEN ${ revi_start } AND ${ revi_end }
	 </select>
	
	<!-- 검색 조건별 -->
	<select id="reviewsConditionRowTotal" parameterType="Map" resultType="int">
		SELECT IFNULL(COUNT(*), 0) FROM reviews;
		<trim prefix="where" prefixOverrides="or">
			<if test="title!=null">
				reviews_title LIKE CONCAT('%', #{title}, '%')
			</if>
		</trim>
	</select>
	
	<select id="reviewsOne" parameterType="string" resultType="com.flower.vo.ReviewsVO">
		SELECT * FROM reviews WHERE reviews_id=#{ reviews_id }
	</select>
	
	<!-- 전체 게시물수 -->
	<select id="reviewsRowTotal" resultType="int">
		SELECT IFNULL(COUNT(*), 0) FROM reviews;
	</select>

	 <!-- 추가 -->
	<insert id="reviewsInsert" parameterType="com.flower.vo.ReviewsVO">
	
		insert into reviews(reviews_id,
		                    member_id,
		                    product_id,
		                    reviews_title,
		                    reviews_register_date,
		                    reviews_content,
		                    reviews_score,
		                    reports_cnt
		                    )
                    values( #{ reviews_id },
							#{ member_id },
						    #{ product_id },
						    #{ reviews_title },
						    now(),
						    #{ reviews_content },
						    #{ reviews_score },
						    #{ reports_cnt }
							)
			
	 </insert>
	 
	 <insert id="reviewsFilename" parameterType="com.flower.vo.MemberProductImageVO">
	 	insert into member_product_image (member_product_image_uuid, 
								  		  member_product_image_file_name,
								          member_product_image_froute)
						           values( #{ member_product_image_uuid }, 
										   #{ member_product_image_file_name },
										   #{ member_product_image_froute }
										   )
	 </insert>
	 
	 <update id="reviewsUpdate" parameterType="com.flower.vo.ReviewsVO">
	 	update reviews set reviews_title           = #{ reviews_title },
						   reviews_content         = #{ reviews_content },
						   reviews_register_date   = now()
		where reviews_id = #{ reviews_id };
	 </update>
	 
	 <delete id="reviewsDelete" parameterType="string">
	 	delete from reviews where reviews_id = #{ reviews_id }
	 </delete>
	 
</mapper>
